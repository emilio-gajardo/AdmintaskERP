package view;

import bo.RolBO;
import entity.Usuario;
import bo.UsuarioBO;
import dao.RolDAO;
import dao.UsuarioDAO;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import test.Validar;

import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import static java.util.logging.Level.parse;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

// LIBRERIA DE ENCRIPTACIÓN
// ALGORITMO DE ENCRIPTACIÓN SHA 512 HEX
//import org.apache.commons.codec.digest.DigestUtils;
import test.Hash;

/**
 *
 * @author Emilio
 */
public class FrmUsuario extends javax.swing.JFrame {

    Usuario usuario = new Usuario();
    private UsuarioBO usuarioBO = new UsuarioBO();
    private UsuarioDAO usuarioDAO = new UsuarioDAO();

    private RolBO rolBO = new RolBO();
    private RolDAO rolDAO = new RolDAO();

    //Datos usados en el FrmCambioClave
    public static String id = "";
    public static String nombreUsuario = "";
    public static String apellidoPaterno = "";
    public static String apellidoMaterno = "";
    public static String nombreCompleto = "";

    public FrmUsuario() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Módulo - Gestión de Usuarios");
        setResizable(false);
        listarUsuarios();
        txtNombre.requestFocus();
        listarRoles();
        btnCambiarClave.setEnabled(false);

        //Integración de icono en la ventana de titulo de la ventana
        BufferedImage image = null;
        try {
            image = ImageIO.read(new File("src/icons/icons32px/logo30px.png"));
        } catch (IOException ex) {
            Logger.getLogger(FrmLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        setIconImage(image);
    }

    // 02-10-2020
    // Emilio Método para cargar registros en la tabla usuarios
    public void listarUsuarios() {
        usuarioBO.listarUsuario(tblUsuario);
    }

    // 12-10-2020
    // Cargar datos desde BD en combobox
    public void listarRoles() {
        rolBO.listarRolCmb(cmbRol);
        rolBO.listarRolCmb(cmbRolEd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        lblNombre = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        txtApellidoPaterno = new javax.swing.JTextField();
        lblApellidoPaterno = new javax.swing.JLabel();
        txtApellidoMaterno = new javax.swing.JTextField();
        lblApellidoMaterno = new javax.swing.JLabel();
        lblRut = new javax.swing.JLabel();
        txtRut = new javax.swing.JTextField();
        lblRol = new javax.swing.JLabel();
        cmbRol = new javax.swing.JComboBox<>();
        cmbEstado = new javax.swing.JComboBox<>();
        lblRol1 = new javax.swing.JLabel();
        pwdClave = new javax.swing.JPasswordField();
        cmbDigv = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        txtIdUsuarioBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        btnEditar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCorreoEd = new javax.swing.JTextField();
        txtApellidoMaternoEd = new javax.swing.JTextField();
        txtApellidoPaternoEd = new javax.swing.JTextField();
        txtNombreEd = new javax.swing.JTextField();
        btnLimipiarEd = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtRutEd = new javax.swing.JTextField();
        txtTelefonoEd = new javax.swing.JTextField();
        cmbEstadoEd = new javax.swing.JComboBox<>();
        cmbRolEd = new javax.swing.JComboBox<>();
        cmbDigvEd = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        btnCambiarClave = new javax.swing.JButton();
        btnListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuario = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1941, 750));
        setPreferredSize(new java.awt.Dimension(1941, 750));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1200, 700));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Usuario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jLayeredPane1.setMaximumSize(new java.awt.Dimension(700, 588));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(700, 588));

        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblNombre.setText("Nombre:");

        lblTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTelefono.setText("Teléfono:");

        lblCorreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCorreo.setText("Correo:");

        lblEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEstado.setText("Estado:");

        txtNombre.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtTelefono.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtCorreo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/anadir.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setIconTextGap(20);
        btnAgregar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnLimpiar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/limpiar32px.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setIconTextGap(20);
        btnLimpiar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        txtApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblApellidoPaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblApellidoPaterno.setText("Apellido Paterno:");

        txtApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblApellidoMaterno.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblApellidoMaterno.setText("Apellido Materno:");

        lblRut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRut.setText("RUT:");

        txtRut.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblRol.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRol.setText("Rol:");

        cmbRol.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbEstado.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Activo", "Inactivo" }));

        lblRol1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblRol1.setText("Clave:");

        cmbDigv.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbDigv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "k" }));

        jLayeredPane1.setLayer(lblNombre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblTelefono, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblCorreo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblEstado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtNombre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtTelefono, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtCorreo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnAgregar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btnLimpiar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtApellidoPaterno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblApellidoPaterno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtApellidoMaterno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblApellidoMaterno, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblRut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtRut, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblRol, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cmbRol, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cmbEstado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(lblRol1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(pwdClave, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(cmbDigv, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblApellidoPaterno)
                            .addComponent(lblApellidoMaterno)
                            .addComponent(lblRut))
                        .addGap(34, 34, 34)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtNombre)
                            .addComponent(txtApellidoPaterno)
                            .addComponent(txtRut)))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTelefono)
                            .addComponent(lblEstado)
                            .addComponent(lblCorreo)
                            .addComponent(lblRol)
                            .addComponent(lblRol1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTelefono)
                            .addComponent(txtCorreo)
                            .addComponent(cmbRol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pwdClave, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28)
                .addComponent(cmbDigv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidoPaterno)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellidoMaterno)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRut)
                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbDigv, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTelefono)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstado)
                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRol)
                    .addComponent(cmbRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRol1)
                    .addComponent(pwdClave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLayeredPane1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblCorreo, lblEstado, lblNombre, lblTelefono});

        jLayeredPane1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmbRol, txtApellidoMaterno, txtApellidoPaterno, txtCorreo, txtNombre, txtRut});

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(574, 574, 574)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(611, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        jTabbedPane1.addTab("Agregar Usuario", jPanel1);

        jPanel2.setPreferredSize(new java.awt.Dimension(573, 600));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Cliente por Id", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jLayeredPane4.setMaximumSize(new java.awt.Dimension(600, 94));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Id Usuario:");

        txtIdUsuarioBuscar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/buscar32px.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.setIconTextGap(20);
        btnBuscar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLayeredPane4.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txtIdUsuarioBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(btnBuscar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap(147, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(27, 27, 27)
                .addComponent(txtIdUsuarioBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtIdUsuarioBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.add(jLayeredPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(33, 29, 840, -1));

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Edición de Cliente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        jLayeredPane3.setMaximumSize(new java.awt.Dimension(600, 495));

        btnEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/guardar32px.png"))); // NOI18N
        btnEditar.setText("Guardar");
        btnEditar.setIconTextGap(20);
        btnEditar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Nombre:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Paterno:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Materno:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("RUT:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Correo:");

        txtCorreoEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtApellidoMaternoEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtApellidoPaternoEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtNombreEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnLimipiarEd.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLimipiarEd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/limpiar32px.png"))); // NOI18N
        btnLimipiarEd.setText("Limpiar");
        btnLimipiarEd.setIconTextGap(20);
        btnLimipiarEd.setPreferredSize(new java.awt.Dimension(100, 25));
        btnLimipiarEd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimipiarEdActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/eliminar32px.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setIconTextGap(20);
        btnEliminar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Teléfono:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Estado:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Rol:");

        txtRutEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtTelefonoEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbEstadoEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbEstadoEd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Activo", "Inactivo" }));

        cmbRolEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        cmbDigvEd.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cmbDigvEd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "k" }));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("DV:");

        btnCambiarClave.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCambiarClave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/cambiarClave32px.png"))); // NOI18N
        btnCambiarClave.setText("Cambiar clave");
        btnCambiarClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarClaveActionPerformed(evt);
            }
        });

        jLayeredPane3.setLayer(btnEditar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtCorreoEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtApellidoMaternoEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtApellidoPaternoEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtNombreEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnLimipiarEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtRutEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtTelefonoEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(cmbEstadoEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(cmbRolEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(cmbDigvEd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnCambiarClave, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnCambiarClave, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnLimipiarEd, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNombreEd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtRutEd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtTelefonoEd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbEstadoEd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel16)
                                .addComponent(jLabel10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtCorreoEd, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cmbRolEd, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE))
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(cmbDigvEd, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtApellidoPaternoEd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                                .addGap(45, 45, 45)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApellidoMaternoEd, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtNombreEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtApellidoMaternoEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8))
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtApellidoPaternoEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtRutEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(cmbDigvEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCorreoEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(txtTelefonoEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbRolEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cmbEstadoEd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(40, 40, 40)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCambiarClave, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimipiarEd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel2.add(jLayeredPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 840, 380));

        btnListar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnListar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/listar32px.png"))); // NOI18N
        btnListar.setText("Listar");
        btnListar.setIconTextGap(20);
        btnListar.setPreferredSize(new java.awt.Dimension(100, 25));
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        jPanel2.add(btnListar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1350, 530, 160, 40));

        jScrollPane1.setBorder(null);

        tblUsuario.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblUsuario.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jScrollPane1.setViewportView(tblUsuario);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 40, 966, 459));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Registro de Usuarios");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 10, -1, -1));

        jTabbedPane1.addTab("Ver Usuarios", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1940, 640));

        btnVolver.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons32px/volver32px.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.setIconTextGap(20);
        btnVolver.setPreferredSize(new java.awt.Dimension(100, 25));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        getContentPane().add(btnVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 670, 160, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        new FrmPanelGeneral().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    // 12-10-2020
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String idUsuarioString = txtIdUsuarioBuscar.getText();

        if (validacionIdUsuario(idUsuarioString) == true) {

            String[] vector = new String[10];
            int idUsuarioInt = Integer.parseInt(txtIdUsuarioBuscar.getText());
            vector = usuarioBO.buscarUsuario(idUsuarioInt);

            txtNombreEd.setText(vector[1]);
            txtApellidoMaternoEd.setText(vector[2]);
            txtApellidoPaternoEd.setText(vector[3]);
            txtRutEd.setText(vector[4]);
            cmbDigvEd.setSelectedItem(vector[5]);
            txtCorreoEd.setText(vector[6]);
            txtTelefonoEd.setText(vector[7]);

            //========================================
            // Tratamiento de atributo ESTADO
            String estadoNumerico = vector[8];
            String estadoString = "";

            if (estadoNumerico.equals("1")) {
                estadoString = "Activo";
            }
            if (estadoNumerico.equals("0")) {
                estadoString = "Inactivo";
            }
            cmbEstadoEd.setSelectedItem(estadoString);
            //========================================

            //========================================
            // Tratamiento de atributo ROL            
            String idRolString = vector[9];
            String[] vectorRol = new String[2];
            int idRolInt = Integer.parseInt(idRolString);
            vectorRol = rolBO.buscarRol(idRolInt);
            String rolDescripcion = vectorRol[1];
            cmbRolEd.setSelectedItem(rolDescripcion);
            // Testing
//            System.out.println("--- TESTING DE ATRIBUTO ROL ---");
//            System.out.println("idRolString: " + idRolString);
//            System.out.println("idRolInt: " + idRolInt);
//            System.out.println("rolDescripcion: " + rolDescripcion);
            //========================================

            //pwdClaveEd.setText(vector[10]);
            // (10-12-2020) (Emilio) (se bloquea o deshabilita el campo de busqueda)
            txtIdUsuarioBuscar.setEnabled(false);

            // (11-12-2020) (Emilio) (Desbloquear boton para cambiar clave)
            btnCambiarClave.setEnabled(true);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimipiarEdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimipiarEdActionPerformed
        limpiarCamposEd();
    }//GEN-LAST:event_btnLimipiarEdActionPerformed

    /**
     * BOTON EDITAR
     */
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        //Captura y Asignación de campos
        String idUsuario = txtIdUsuarioBuscar.getText();
        String nombreEd = txtNombreEd.getText();
        String apellidoPaternoEd = txtApellidoPaternoEd.getText();
        String apellidoMaternoEd = txtApellidoMaternoEd.getText();
        String rutEd = txtRutEd.getText();
        String digvEd = cmbDigvEd.getSelectedItem().toString();
        String correoEd = txtCorreoEd.getText();
        String telefonoEd = txtTelefonoEd.getText();
        String estadoEd = cmbEstadoEd.getSelectedItem().toString();
        String rolEd = cmbRolEd.getSelectedItem().toString();
        //Conversión de rol de string a int
        int rolIndex = cmbRolEd.getSelectedIndex();

        //****************************************************************
        // 25-10-2020
        // ENCRIPTACIÓN DE CLAVE
        // ALGORITMO SHA 512
        //String claveEdSinEncriptar = new String(pwdClaveEd.getPassword());
        //String claveEdEncriptada = Hash.sha512(claveEdSinEncriptar);
        //String claveEdEncriptada = DigestUtils.sha512Hex(claveEdSinEncriptar);
        //byte[] bytes = DigestUtils.sha512(claveEdSinEncriptar);
        //String claveEdEncriptada = new String(bytes);
        //*****************************************************************
        //Validación de campos
        //if (validacionEdicion(nombreEd, apellidoPaternoEd, apellidoMaternoEd, rutEd, digvEd, correoEd, telefonoEd, estadoEd, rolEd, claveEdSinEncriptar, idUsuario) == true) {
        if (validacionEdicion(nombreEd, apellidoPaternoEd, apellidoMaternoEd, rutEd, digvEd, correoEd, telefonoEd, estadoEd, rolEd, idUsuario) == true) {

            //Conversion de dato tipo String a int
            int idUsuarioInt = Integer.parseInt(idUsuario);
            int rutInt = Integer.parseInt(rutEd);
            //int telefonoInt = Integer.parseInt(telefonoEd);
            long telefonoLong = Long.parseLong(telefonoEd);
            int estadoInt = 0;

            //Conversión de estado
            if (estadoEd.equals("Activo")) {
                estadoInt = 1;
            }
            if (estadoEd.equals("Inactivo")) {
                estadoInt = 0;
            }

            //Instanciación y Asignación de valores capturados
            //Usuario usuario = new Usuario();
            usuario.setIdUsuario(idUsuarioInt);
            usuario.setNombre(nombreEd);
            usuario.setApellidoMaterno(apellidoMaternoEd);
            usuario.setApellidoPaterno(apellidoPaternoEd);
            usuario.setRut(rutInt);
            usuario.setDigv(digvEd);
            usuario.setCorreo(correoEd);
            //usuario.setTelefono(telefonoInt);
            usuario.setTelefono(telefonoLong);
            usuario.setActivo(estadoInt); //Activo = estado
            usuario.setRolIdRol(rolIndex);
            //usuario.setClave(claveEdEncriptada);

            // TESTING
            // System.out.println(": " + xx.getClass().getSimpleName());
//            System.out.println("\n\n***********************************");
//            System.out.println("*** TESTING EDITAR USUARIO ***");
//            System.out.println("id: " + idUsuario);
//            System.out.println("NOMBRE: " + nombreEd);
//            System.out.println("APEL MATERNO: " + apellidoMaternoEd);
//            System.out.println("APEL PATERNO: " + apellidoPaternoEd);
//            System.out.println("RUT: " + rutEd);
//            System.out.println("DIGV: " + digvEd);
//            System.out.println("CORREO: " + correoEd);
//            System.out.println("TELEFONO: " + telefonoEd);
//            System.out.println("ESTADO: " + estadoInt);
//            System.out.println("ROL: " + rolIndex);
//            //System.out.println("CLAVE sin encriptar: " + claveEdSinEncriptar);
//            //System.out.println("CLAVE encriptada: " + claveEdEncriptada);
//            System.out.println("***********************************");
//
//            System.out.println("\n\n******************************");
//            System.out.println("TESTING: TIPO DE DATOS");
//            System.out.println("TIPO Telefono: " + ((Object) telefonoLong).getClass().getSimpleName());
//            System.out.println("TIPO EstadoInt: " + ((Object) estadoInt).getClass().getSimpleName());
//            System.out.println("TIPO RolIdex: " + ((Object) rolIndex).getClass().getSimpleName());
//            System.out.println("\n\n******************************");
            String mensaje = usuarioBO.modificarUsuario(usuario);

//            System.out.println("Mensaje: \n" + mensaje);
            JOptionPane.showMessageDialog(null, mensaje, "Infomación", JOptionPane.INFORMATION_MESSAGE);

            limpiarCamposEd();
            listarUsuarios();

        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    // 05-10-2020
    // AGREGAR NUEVO USUARIO
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed

        //Captura y asignación
        String nombre = txtNombre.getText();
        String apellidoMaterno = txtApellidoMaterno.getText();
        String apellidoPaterno = txtApellidoPaterno.getText();
        String rutString = txtRut.getText();
        String digvString = cmbDigv.getSelectedItem().toString();
        String correo = txtCorreo.getText();
        String telefonoString = txtTelefono.getText();
        String estadoString = cmbEstado.getSelectedItem().toString();
        String rolString = cmbRol.getSelectedItem().toString();
        int rolIndex = cmbRol.getSelectedIndex();

        //****************************************************************
        // 25-10-2020
        // ENCRIPTACIÓN DE CLAVE
        // ALGORITMO SHA 512
        String claveSinEncriptar = new String(pwdClave.getPassword());
        String claveEncriptada = Hash.sha512(claveSinEncriptar);

        //String claveEncriptada = DigestUtils.sha512Hex(claveSinEncriptar);
        //byte[] bytes = DigestUtils.sha512(claveSinEncriptar);
        //String claveEncriptada = new String(bytes);
        //*****************************************************************
        //</editor-fold>
        //<editor-fold defaultstate="collapsed" desc="Método de agregar nuevo usuario">
        if (validacionAgregar(nombre, apellidoPaterno, apellidoMaterno, rutString, digvString, correo, telefonoString, estadoString, rolString, claveSinEncriptar) == true) {

            // Validación de la existencia del rut del usuario
            if (validacionRutUsuario(rutString) == true) {
                //Conversion de String a int
                int rutInt = Integer.parseInt(rutString);
                //int telefonoInt = Integer.parseInt(telefonoString);
                long telefonoLong = Long.parseLong(telefonoString);
                int estadoInt = 0; // campo en la BD ACTIVO

                if (estadoString.equals("Activo")) {
                    estadoInt = 1;
                }
                if (estadoString.equals("Inactivo")) {
                    estadoInt = 0;
                }

                // Instanciación y Asignación
                //Usuario usuario = new Usuario();
                usuario.setNombre(nombre);
                usuario.setApellidoMaterno(apellidoMaterno);
                usuario.setApellidoPaterno(apellidoPaterno);
                usuario.setRut(rutInt);
                usuario.setDigv(digvString);
                usuario.setCorreo(correo);
                //usuario.setTelefono(telefonoInt);
                usuario.setTelefono(telefonoLong);
                usuario.setActivo(estadoInt);
                usuario.setRolIdRol(rolIndex);
                usuario.setClave(claveEncriptada);

                String mensaje = usuarioBO.agregarUsuario(usuario);
                JOptionPane.showMessageDialog(null, mensaje, "Infomación", JOptionPane.INFORMATION_MESSAGE);
                //System.out.println("Mensaje: \n" + mensaje);
                limpiarCampos();
                listarUsuarios();
                //</editor-fold>

                //<editor-fold defaultstate="collapsed" desc="TESTING">
                /*
                System.out.println("\n\n******************************");
                System.out.println("TESTING: AGREGAR USUARIO");
                System.out.println("Nombre: " + nombre);
                System.out.println("Apellido paterno: " + apellidoPaterno);
                System.out.println("Apellido materno: " + apellidoMaterno);
                System.out.println("Rut: " + rutInt);
                System.out.println("DIGV: " + digvString);
                System.out.println("Correo: " + correo);
                System.out.println("Telefono: " + telefonoLong);
                System.out.println("-----------------------------");
                System.out.println("EstadoString: " + estadoString);
                System.out.println("EstadoInt: " + estadoInt);
                System.out.println("-----------------------------");
                System.out.println("RolIdex: " + rolIndex);
                System.out.println("clave Sin Encriptar: " + claveSinEncriptar);
                System.out.println("clave Encriptada: " + claveEncriptada);

                System.out.println("\n\n******************************");
                System.out.println("TESTING: TIPO DE DATOS");
                System.out.println("TIPO Nombre: " + nombre.getClass().getSimpleName());
                System.out.println("TIPO Apellido paterno: " + apellidoPaterno.getClass().getSimpleName());
                System.out.println("TIPO Apellido materno: " + apellidoMaterno.getClass().getSimpleName());
                System.out.println("TIPO Rut: " + ((Object) rutInt).getClass().getSimpleName());
                System.out.println("TIPO DIGV: " + digvString.getClass().getSimpleName());
                System.out.println("TIPO Correo: " + correo.getClass().getSimpleName());
                System.out.println("TIPO Telefono: " + ((Object) telefonoLong).getClass().getSimpleName());
                System.out.println("-----------------------------");
                System.out.println("TIPO EstadoString: " + estadoString.getClass().getSimpleName());
                System.out.println("TIPO EstadoInt: " + ((Object) estadoInt).getClass().getSimpleName());
                System.out.println("-----------------------------");
                System.out.println("TIPO RolIdex: " + ((Object) rolIndex).getClass().getSimpleName());
                System.out.println("TIPO ClaveGetPassword: " + claveEncriptada.getClass().getSimpleName());
                 */
                //</editor-fold>
            }
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    //ELIMINAR CLIENTE
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String idUsuarioString = txtIdUsuarioBuscar.getText();

        if (validacionIdUsuario(idUsuarioString) == true) {
            //UsuarioBO usuarioBO = new UsuarioBO();
            int idUsuarioInt = Integer.parseInt(txtIdUsuarioBuscar.getText());

            //Mensaje de Verificación
            int respuesta = JOptionPane.showConfirmDialog(null, "¿Está seguro de eliminar al Usuario?", "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            // 0 = Si
            if (respuesta == 0) {
                String mensaje = usuarioBO.eliminarUsuario(idUsuarioInt);
//                System.out.println("\n\n***********************************");
//                System.out.println("Mensaje Eliminar usuario: " + mensaje);
//                System.out.println("\n\n***********************************");
                JOptionPane.showMessageDialog(null, mensaje);
                limpiarCampos();
                limpiarCamposEd();
                listarUsuarios();
            } else {
                JOptionPane.showMessageDialog(null, "Eliminación cancelada!", "Infomación", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        /*if (this.jTabbedPane1.getSelectedIndex() == 1) {
            System.out.println("Ingreso a pestaña 2");
            listarUsuarios();
        }*/
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        listarUsuarios();
    }//GEN-LAST:event_btnListarActionPerformed

    /**
     * 02-12-2020
     *
     * @author Emilio
     * @throws el boton cerrar cierra la ventana actual y abre la ventana del
     * menu general del sistema
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        new FrmPanelGeneral().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    /**
     * 11-12-2020
     *
     * @author Emilio
     * @throws Abre la ventana de la vista cambiar clave
     */
    private void btnCambiarClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarClaveActionPerformed
        FrmCambioClave frmCambioClave = new FrmCambioClave();
        frmCambioClave.frmCambioClave();
        //this.setVisible(false);
        //new FrmCambioClave().setVisible(true);
        this.dispose();

        //Parametros a enviar al formulario (frmCambioClave)
        id = txtIdUsuarioBuscar.getText();
        nombreUsuario = txtNombreEd.getText();
        apellidoMaterno = txtApellidoMaternoEd.getText();
        apellidoPaterno = txtApellidoPaternoEd.getText();
        nombreCompleto = (nombreUsuario + " " + apellidoPaterno + " " + apellidoMaterno);

        //frmCambioClave.lblId.setText(id);
        //frmCambioClave.lblNombreUsuario.setText(nombreCompleto);
        //System.out.println("\n---Enviando datos de FrmUsuario--");
        //System.out.println("ID recibido: " + id);
        //System.out.println("Nombre recibido: " + nombreCompleto);

    }//GEN-LAST:event_btnCambiarClaveActionPerformed

    // Validación de idUsuario
    private boolean validacionIdUsuario(String idUsuarioString) {

        //Validar que el campo de busqueda no esté vacío
        if (Validar.campoVacio(idUsuarioString) == false) {
            mostrarMensaje("Error: \nEl campo está vacío! \nDebe completar el campo.");
            txtIdUsuarioBuscar.grabFocus();
            limpiarCampos();
            return false;
        }

        //Validar que el campo de busqueda sea numérico
        if (Validar.numeroEntero(idUsuarioString) == false) {
            mostrarMensaje("Error: \nEl dato ingresado debe ser numérico!");
            txtIdUsuarioBuscar.grabFocus();
            limpiarCampos();
            return false;
        }

        if (idUsuarioString.equals("1")) {
            mostrarMensaje("Error: \nPor seguridad! \nNo es posible modificar a este usuario");
            txtIdUsuarioBuscar.grabFocus();
            limpiarCampos();
            limpiarCamposEd();
            return false;
        }

        //Validar que idUsuario exista
        //UsuarioBO usuarioBO = new UsuarioBO();
        int idUsuarioInt = Integer.parseInt(idUsuarioString);
        String[] vector = new String[6];
        vector = usuarioBO.buscarUsuario(idUsuarioInt);
        String idUsuario = vector[0];

        if (idUsuario == "") {
            mostrarMensaje("Error: \nEl id ingresado no existe!");
            txtIdUsuarioBuscar.grabFocus();
            limpiarCampos();
            return false;
        }
        return true;
    }

    //Validación de Rut de usuario
    private boolean validacionRutUsuario(String rutString) {

        boolean validador;
        //UsuarioBO usuarioBO = new UsuarioBO();
        int rutInt = Integer.parseInt(rutString);
        validador = usuarioBO.buscarRutUsuario(rutInt);

        if (validador == true) {
            mostrarMensaje("Error: \nEl rut ya existe!");
            return validador = false;
        }

        if (validador == false) {
            return validador = true;
        }
        return validador;
    }

    // Limpiar campos de pestaña de agregar
    public void limpiarCampos() {
        txtNombre.setText("");
        txtApellidoMaterno.setText("");
        txtApellidoPaterno.setText("");
        txtRut.setText("");
        cmbDigv.setSelectedItem("Seleccione");
        txtCorreo.setText("");
        txtTelefono.setText("");
        cmbEstado.setSelectedItem("Seleccione");
        cmbRol.setSelectedItem("Seleccione");
        pwdClave.setText("");
    }

    //Limpiar campos de pestaña de editar
    public void limpiarCamposEd() {
        txtIdUsuarioBuscar.setText("");
        txtNombreEd.setText("");
        txtApellidoMaternoEd.setText("");
        txtApellidoPaternoEd.setText("");
        txtRutEd.setText("");
        cmbDigvEd.setSelectedItem("Seleccione");
        txtCorreoEd.setText("");
        txtTelefonoEd.setText("");
        cmbEstadoEd.setSelectedItem("Seleccione");
        cmbRolEd.setSelectedItem("Seleccione");
        //pwdClaveEd.setText("");

        // (10-12-2020) (Emilio) (habilitación de campo de busqueda)
        txtIdUsuarioBuscar.setEnabled(true);

        // (12-12-2020) (Emilio) (bloquear boton cambiar clave)
        btnCambiarClave.setEnabled(false);
    }

    // 05-10-2020
    // Método de validación de campos
    // El método usa la clase Validar.java Ruta: com.admintaskv2.cl.test.Validar
    private boolean validacionAgregar(String nombre, String apellidoPaterno, String apellidoMaterno, String rutString, String digvString, String correo, String telefonoString, String estadoString, String rolString, String clave) {

        //Validación de los campos vacíos o con espacios
        if (Validar.campoVacio(nombre) == false) {
            mostrarMensaje("Error: \nEl nombre está vacío!");
            txtNombre.grabFocus();
            return false;
        }

        if (Validar.campoVacio(apellidoPaterno) == false) {
            mostrarMensaje("Error: \nEl Apellido Paterno está vacío!");
            txtApellidoPaterno.grabFocus();
            return false;
        }

        if (Validar.campoVacio(apellidoMaterno) == false) {
            mostrarMensaje("Error: \nEl Apellido Materno está vacío!");
            txtApellidoMaterno.grabFocus();
            return false;
        }

        if (Validar.campoVacio(rutString) == false) {
            mostrarMensaje("Error: \nEl Rut está vacío!");
            txtRut.grabFocus();
            return false;
        }

        if (Validar.campoVacio(digvString) == false || cmbDigv.getSelectedItem().toString().equals("Seleccione")) {
            mostrarMensaje("Error: \nDebe seleccionar el dígito verificador!");
            cmbDigv.grabFocus();
            return false;
        }

        if (Validar.campoVacio(correo) == false) {
            mostrarMensaje("Error: \nEl correo está vacío!");
            txtCorreo.grabFocus();
            return false;
        }

        if (Validar.campoVacio(telefonoString) == false) {
            mostrarMensaje("Error: \nEl teléfono está vacío!");
            txtTelefono.grabFocus();
            return false;
        }

        if (estadoString.equals("Seleccione")) {
            mostrarMensaje("Error: \nDebe seleccionar un estado!.");
            cmbEstado.grabFocus();
            return false;
        }

        if (Validar.campoVacio(rolString) == false || rolString.equals("Seleccione")) {
            mostrarMensaje("Error: \nDebe seleccionar un rol!");
            cmbRol.grabFocus();
            return false;
        }

        if (Validar.campoVacio(clave) == false) {
            mostrarMensaje("Error: \nDebe ingresar una clave!.");
            pwdClave.grabFocus();
            return false;
        }

        //Validación de datos numéricos
        if (Validar.largoTelefono(telefonoString) == false) {
            mostrarMensaje("Error: \nEl teléfono debe tener máximo 11 dígitos");
            txtTelefono.grabFocus();
            return false;
        }

        if (Validar.numeroEntero(telefonoString) == false) {
            mostrarMensaje("Error: \nEl teléfono no es válido! \nDebe contener solo números.");
            txtTelefono.grabFocus();
            return false;
        }

        if (Validar.numeroEntero(rutString) == false) {
            mostrarMensaje("Error: \nEl rut no es válido! \nDebe contener solo números.");
            txtRut.grabFocus();
            return false;
        }

        return true;
    }

    //private boolean validacionEdicion(String nombreEd, String apellidoPaternoEd, String apellidoMaternoEd, String rutEd, String digvEd, String correoEd, String telefonoEd, String estadoEd, String rolEd, String claveEdSinEncriptar, String idUsuario) {
    private boolean validacionEdicion(String nombreEd, String apellidoPaternoEd, String apellidoMaternoEd, String rutEd, String digvEd, String correoEd, String telefonoEd, String estadoEd, String rolEd, String idUsuario) {

        //Validar campos vacíos
        if (idUsuario.isEmpty()) {
            mostrarMensaje("Error: \nEl idUsuario está vacío! \nDebe completar el campo.");
            txtNombreEd.grabFocus(); //Dar el enfoque al control
            return false;
        }

        if (Validar.campoVacio(nombreEd) == false) {
            mostrarMensaje("Error: \nEl nombre está vacío! \nDebe completar el campo.");
            txtNombreEd.grabFocus(); //Dar el enfoque al control
            return false;
        }

        if (Validar.campoVacio(apellidoPaternoEd) == false) {
            mostrarMensaje("Error: \nEl apellido paterno está vacío!");
            txtApellidoPaternoEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(apellidoMaternoEd) == false) {
            mostrarMensaje("Error: \nEl apellido materno está vacío!");
            txtApellidoMaternoEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(rutEd) == false) {
            mostrarMensaje("Error: \nEl rut está vacío!");
            txtRutEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(digvEd) == false) {
            mostrarMensaje("Error: \nEl dígito verificador está vacío!");
            cmbDigvEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(correoEd) == false) {
            mostrarMensaje("Error: \nEl correo está vacío!");
            txtCorreoEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(telefonoEd) == false) {
            mostrarMensaje("Error: \nEl teléfono está vacío!");
            txtTelefonoEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(estadoEd) == false) {
            mostrarMensaje("Error: \nEl estado está vacío!");
            cmbEstadoEd.grabFocus();
            return false;
        }

        if (Validar.campoVacio(rolEd) == false) {
            mostrarMensaje("Error: \nEl rol esta vacío!");
            cmbRolEd.grabFocus();
            return false;
        }

        /*if (Validar.campoVacio(claveEdSinEncriptar) == false) {
            mostrarMensaje("Error: \nLa clave está vacía!");
            System.out.println("Clave sin encriptar: " + claveEdSinEncriptar);
            pwdClaveEd.grabFocus();
            return false;
        }*/
        //Validar los datos numéricos
        if (Validar.numeroEntero(rutEd) == false) {
            mostrarMensaje("Error: \nEl rut no es válido! \nDebe contener solo números.");
            txtRutEd.grabFocus();
            return false;
        }

        if (Validar.largoTelefono(telefonoEd) == false) {
            mostrarMensaje("Error: \nEl teléfono debe tener máximo 11 dígitos");
            txtTelefonoEd.grabFocus();
            return false;
        }

        if (Validar.numeroEntero(telefonoEd) == false) {
            mostrarMensaje("Error: \nEl teléfono no es válido! \nDebe contener solo números.");
            txtTelefonoEd.grabFocus();
            return false;
        }

        return true;
    }

    //Método común para mostrar mensajes
    private void mostrarMensaje(String mensaje) {
        JOptionPane.showMessageDialog(null, mensaje);
    }

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
    public void frmUsuario() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCambiarClave;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimipiarEd;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JComboBox<String> cmbDigv;
    private javax.swing.JComboBox<String> cmbDigvEd;
    private javax.swing.JComboBox<String> cmbEstado;
    private javax.swing.JComboBox<String> cmbEstadoEd;
    private javax.swing.JComboBox<String> cmbRol;
    private javax.swing.JComboBox<String> cmbRolEd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblApellidoMaterno;
    private javax.swing.JLabel lblApellidoPaterno;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblRol;
    private javax.swing.JLabel lblRol1;
    private javax.swing.JLabel lblRut;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JPasswordField pwdClave;
    private javax.swing.JTable tblUsuario;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoMaternoEd;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtApellidoPaternoEd;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorreoEd;
    private javax.swing.JTextField txtIdUsuarioBuscar;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNombreEd;
    private javax.swing.JTextField txtRut;
    private javax.swing.JTextField txtRutEd;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTelefonoEd;
    // End of variables declaration//GEN-END:variables
}
